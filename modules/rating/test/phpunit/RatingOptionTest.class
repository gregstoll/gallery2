<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2008 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * Tests RatingItemEdit and enabling of rating for albums.
 * @package Rating
 * @subpackage PHPUnit
 * @author Don Seiler <don@seiler.us>
 * @version $Revision: 17580 $
 */
class RatingOptionTest extends ItemEditOptionTestCase {
	/* deprecated dynamic properties in php 8.2 */
	public $_childAlbum;

	public function __construct($methodName) {
		parent::__construct($methodName, 'rating', 'RatingItemEdit');
	}

	public function setUp($x1 = null) {
		$ret = parent::setUp();

		if ($ret) {
			return $ret;
		}

		list($ret, $this->_album) = $this->_createRandomAlbum($this->_getRootId());

		if ($ret) {
			return $ret;
		}
		$this->_markForCleanup($this->_album);

		$ret = $this->_markPluginParametersForCleanup('module', 'rating');

		if ($ret) {
			return $ret;
		}
	}

	public function testEnableRatingForAlbum() {
		$ret = GalleryCoreApi::setPluginParameter(
			'module',
			'rating',
			'enabled',
			0,
			$this->_album->getId()
		);

		if ($ret) {
			return $ret;
		}

		$form['action']['save']    = 'Save';
		$form['rating']['enabled'] = 'on';
		$result                    = $this->_handleRequestAfterEdit($form, $this->_album);
		$this->assertEquals(array(array(), array()), $result, 'Save failed.');

		list($ret, $enabled) = GalleryCoreApi::getPluginParameter(
			'module',
			'rating',
			'enabled',
			$this->_album->getId()
		);

		if ($ret) {
			return $ret;
		}
		$this->assertEquals(1, (int)$enabled, 'Rating not enabled.');
	}

	public function testDisableRatingForAlbum() {
		$ret = GalleryCoreApi::setPluginParameter(
			'module',
			'rating',
			'enabled',
			1,
			$this->_album->getId()
		);

		if ($ret) {
			return $ret;
		}

		$form['action']['save'] = 'Save';
		$result                 = $this->_handleRequestAfterEdit($form, $this->_album);
		$this->assertEquals(array(array(), array()), $result, 'Save failed.');

		list($ret, $enabled) = GalleryCoreApi::getPluginParameter(
			'module',
			'rating',
			'enabled',
			$this->_album->getId()
		);

		if ($ret) {
			return $ret;
		}
		$this->assertEquals(0, (int)$enabled, 'Rating enabled.');
	}

	public function testEnableInDescendents() {
		$ret = GalleryCoreApi::setPluginParameter(
			'module',
			'rating',
			'enabled',
			0,
			$this->_album->getId()
		);

		if ($ret) {
			return $ret;
		}
		$form['rating']['enabled']             = 1;
		$form['changeInDescendents']['rating'] = 1;

		list($ret, $this->_childAlbum) = $this->_createRandomAlbum($this->_album->getId());

		if ($ret) {
			return $ret;
		}
		$ret = GalleryCoreApi::setPluginParameter(
			'module',
			'rating',
			'enabled',
			0,
			$this->_childAlbum->getId()
		);

		if ($ret) {
			return $ret;
		}

		list($error, $warning) = $this->_handleRequestAfterEdit($form, $this->_album);
		$this->assertEquals(array(), $error);
		$this->assertEquals(array(), $warning);

		list($ret, $enabled) = GalleryCoreApi::getPluginParameter(
			'module',
			'rating',
			'enabled',
			$this->_album->getId()
		);

		if ($ret) {
			return $ret;
		}
		$this->assertEquals(1, (int)$enabled, 'Parent album');

		list($ret, $enabled) = GalleryCoreApi::getPluginParameter(
			'module',
			'rating',
			'enabled',
			$this->_childAlbum->getId()
		);

		if ($ret) {
			return $ret;
		}
		$this->assertEquals(1, (int)$enabled, 'Child album');
	}
}
