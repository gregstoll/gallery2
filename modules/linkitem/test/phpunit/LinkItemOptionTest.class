<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2008 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

GalleryCoreApi::requireOnce('lib/tools/phpunit/ItemEditOptionTestCase.class');

/**
 * LinkItemOption tests
 * @package LinkItem
 * @subpackage PHPUnit
 * @author Alan Harder <alan.harder@sun.com>
 * @version $Revision: 17580 $
 */
class LinkItemOptionTest extends ItemEditOptionTestCase {
	/* deprecated dynamic properties in php 8.2 */
	public $_link;

	public function __construct($methodName) {
		parent::__construct($methodName, 'linkitem', 'LinkItemOption');
	}

	public function setUp($x1 = null) {
		$ret = parent::setUp();

		if ($ret) {
			return $ret;
		}

		list($ret, $this->_album) = $this->_createRandomAlbum($this->_getRootId());

		if ($ret) {
			return $ret;
		}
		$this->_markForCleanup($this->_album);

		list($ret, $lockId) = GalleryCoreApi::acquireReadLock(array($this->_album->getId()));

		if ($ret) {
			return $ret;
		}

		list($ret, $this->_link) = GalleryCoreApi::newFactoryInstance('GalleryEntity', 'GalleryLinkItem');

		if ($ret) {
			return $ret;
		}

		if (empty($this->_link)) {
			return GalleryCoreApi::error(ERROR_MISSING_OBJECT);
		}
		$ret = $this->_link->create($this->_album->getId(), 'http://test.com/test.html');

		if ($ret) {
			return $ret;
		}
		$ret = $this->_link->save();

		if ($ret) {
			return $ret;
		}

		$ret = GalleryCoreApi::releaseLocks($lockId);

		if ($ret) {
			return $ret;
		}
	}

	public function testSetUrl() {
		$form = array(
			'LinkItemOption' => array(
				'link' => 'http://test.net/',
			),
		);

		list($error, $warning) = $this->_handleRequestAfterEdit($form, $this->_link);
		$this->assertEquals(array(), $error);
		$this->assertEquals(array(), $warning);

		list($ret, $link) = $this->_link->refresh();

		if ($ret) {
			return $ret;
		}
		$this->assertEquals('http://test.net/', $link->getLink());
	}

	public function testMissingUrl() {
		$form = array(
			'LinkItemOption' => array(
				'link' => '',
			),
		);

		list($error, $warning) = $this->_handleRequestAfterEdit($form, $this->_link);
		$this->assertEquals(array('form[LinkItemOption][error][link][missing]'), $error);
		$this->assertEquals(array(), $warning);
	}
}
